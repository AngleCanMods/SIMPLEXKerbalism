// ======================
// US2 Science Support
// ======================
// @author leonardfactory


// Fix deploy animations for different science Wedges, since they should be configured
// in Experiment PartModule for Kerbalism.
@PART[USMatBayWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{	
    @MODULE[Experiment]:HAS[#experiment_id[mobileMaterialsLab]]
    {	
        %anim_deploy = BayDoorOpen
    }
}

@PART[USThermoBaroWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{	
    @MODULE[Experiment]:HAS[#experiment_id[temperatureScan]]
    {	
        %anim_deploy = ThermDeploy
    }

    @MODULE[Experiment]:HAS[#experiment_id[barometerScan]]
    {	
        %anim_deploy = BaroDeploy
    }
}

@PART[USAccelGravWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{	
    @MODULE[Experiment]:HAS[#experiment_id[gravityScan]]
    {	
        %anim_deploy = GravDeploy
    }

    @MODULE[Experiment]:HAS[#experiment_id[seismicScan]]
    {	
        %anim_deploy = AccelDeploy
    }
}

@PART[USMapCamWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{	
    @MODULE[Experiment]:HAS[#experiment_id[USmapCam]]
    {	
        %anim_deploy = CaseOpen
    }

    // @MODULE[Experiment]:HAS[#experiment_id[USlaserAltimeter]]
    // {	
    //     %anim_deploy = ??
    // }
}

@PART[USGooBayWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{	
    @MODULE[Experiment]:HAS[#experiment_id[mysteryGoo]]
    {	
        %anim_deploy = GooBayOpen
        %anim_loop = Canister
    }

    // Since Goo Bay has two animations, and I didn't find a way to reproduce
    // them both, I'm leaving the two animations here.
    // Would be awesome to find a way to reproduce them sequentially automatically.
    MODULE
	{
		name = ModuleAnimateGeneric
		animationName = Canister1
		startEventGUIName = #KerbalismSimplex_US2_goo_canister_left_start
		endEventGUIName = #KerbalismSimplex_US2_goo_canister_left_end
		actionGUIName = #KerbalismSimplex_US2_goo_canister_left_toggle
	}

    MODULE
	{
		name = ModuleAnimateGeneric
		animationName = Canister2
		startEventGUIName = #KerbalismSimplex_US2_goo_canister_right_start
		endEventGUIName = #KerbalismSimplex_US2_goo_canister_right_end
		actionGUIName = #KerbalismSimplex_US2_goo_canister_right_toggle
	}
}

@PART[USAdvancedMicroSatWedge]:NEEDS[FeatureScience]:AFTER[KerbalismSimplex]
{
    @MODULE[Experiment]:HAS[#experiment_id[magnetometer]]
    {	
        %anim_deploy = LSubsatMag
    }
}

// ------------------------------
// Replace Containers with HDD
// ------------------------------
@PART:HAS[@MODULE[USScienceContainer]]:NEEDS[UniversalStorage2&FeatureScience]:FOR[KerbalismSimplex]
{
    !MODULE[USScienceContainer] {}
    MODULE
	{
        name = HardDrive
		dataCapacity = 20 // TODO Balance
		sampleCapacity = 2.0
	}
}

// ------------------------------
// Remove Radiators
// ------------------------------
@PART:HAS[@MODULE[USRadiatorSwitch]]:NEEDS[UniversalStorage2&FeatureScience]:FOR[KerbalismSimplex]
{
    !MODULE[USRadiatorSwitch] {}
}

// ------------------------------
// SCIENCE EXPERIMENTS
// ------------------------------

@KERBALISM_EXPERIMENT_VALUES:NEEDS[UniversalStorage2&FeatureScience]
{	
    US2
    {
        mapCam
        {	
            ECCost = 2	        // medium EC/s consumption
            size = 492          // photos are big!					
            value = 10	        // low points	
            duration = 21360    // c.a. 6 hours
            requirements = Sunlight,OrbitMaxEccentricity:0.2
            ResourceRates =
        }

        laserAltimeter
        {	
            ECCost = 1.5	    // medium EC/s consumption
            size = 124          // not big as photos			
            value = 6	        // low points	
            duration = 3468     // c.a. 1 hour
            requirements = OrbitMaxEccentricity:0.2
            ResourceRates =
        }

        cameraPic
        {
            ECCost = 4.0	    // high EC/s consumption
            size = 20290        // veeery big as photos (20Gb)	
            value = 64	        // high points	
            duration = 649800   // c.a. 6 months
            requirements = Sunlight,OrbitMaxEccentricity:0.2
            ResourceRates =
        }
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USmapCam]]:NEEDS[FeatureScience]:FOR[zzzKerbalismSimplex]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/size$
    @dataScale /= #$baseValue$

    KERBALISM_EXPERIMENT
    {
        Situation = Space@Biomes
        BodyNotAllowed = Suns
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USlaserAltimeter]]:NEEDS[FeatureScience]:FOR[zzzKerbalismSimplex]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/size$
    @dataScale /= #$baseValue$

    KERBALISM_EXPERIMENT
    {
        Situation = Space@Biomes
        BodyAllowed = Solid
    }
}

@EXPERIMENT_DEFINITION:HAS[#id[USCameraPicture]]:NEEDS[FeatureScience]:FOR[zzzKerbalismSimplex]
{
    @baseValue = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/value$
    @dataScale = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/size$
    @dataScale /= #$baseValue$

    KERBALISM_EXPERIMENT
    {
        Situation = Space@Biomes
        BodyNotAllowed = Suns
    }
}

// Apply Experiment patches to specific PartModules.
@PART:HAS[@MODULE:HAS[#experimentID[USmapCam]]]:NEEDS[FeatureScience]:FOR[KerbalismSimplex]
{	
    !MODULE:HAS[#experimentID[USmapCam]] {}
    MODULE
    {	
        name = Experiment
        experiment_id = USmapCam
        ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/ECCost$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/duration$
        requires = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/requirements$
        resources = #$@KERBALISM_EXPERIMENT_VALUES/US2/mapCam/ResourceRates$
        allow_shrouded = False
    }
}

@PART:HAS[@MODULE:HAS[#experimentID[USlaserAltimeter]]]:NEEDS[FeatureScience]:FOR[KerbalismSimplex]
{	
    !MODULE:HAS[#experimentID[USlaserAltimeter]] {}
    MODULE
    {	
        name = Experiment
        experiment_id = USlaserAltimeter
        ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/ECCost$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/duration$
        requires = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/requirements$
        resources = #$@KERBALISM_EXPERIMENT_VALUES/US2/laserAltimeter/ResourceRates$
        allow_shrouded = False
    }
}

@PART:HAS[@MODULE:HAS[#experimentID[USCameraPicture]]]:NEEDS[FeatureScience]:FOR[KerbalismSimplex]
{	
    !MODULE:HAS[#experimentID[USCameraPicture]] {}
    MODULE
    {	
        name = Experiment
        experiment_id = USCameraPicture
        ec_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/ECCost$
        data_rate = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/size$
        @data_rate /= #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/duration$
        requires = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/requirements$
        resources = #$@KERBALISM_EXPERIMENT_VALUES/US2/cameraPic/ResourceRates$
        allow_shrouded = False
    }
}

// -----------------------------
// Revert common experiments to stock ones, like temperature & barometer.
// Applied before Kerbalism patches them globally.

!EXPERIMENT_DEFINITION[UStemperatureScan] {}
!EXPERIMENT_DEFINITION[USbarometerScan] {}

@PART:HAS[@MODULE:HAS[#experimentID[UStemperatureScan]]]:NEEDS[FeatureScience]
{	
    !MODULE:HAS[#experimentID[UStemperatureScan]] {}
    MODULE
    {	
        name = Experiment
        experiment_id = temperatureScan
    }
}

@PART:HAS[@MODULE:HAS[#experimentID[USbarometerScan]]]:NEEDS[FeatureScience]
{	
    !MODULE:HAS[#experimentID[USbarometerScan]] {}
    MODULE
    {	
        name = Experiment
        experiment_id = barometerScan
    }
}