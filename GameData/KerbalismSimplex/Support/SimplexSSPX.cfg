
// removed utility 125 shielding  DONE


//	=====================
//	***	ECLSS modules

@PART[sspx-inflatable-cen*,sspx-expandable-cen*]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	// Kerbalism forces the habitat to be inflated if kerbals are inside
		@CrewCapacity = #$MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
		MODULE
			{	name = ProcessController
				resource = _Scrubber
				title = #KerbalismSimplex_scrubber
				capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				running = true
			}
		MODULE
			{	name = ProcessController
				resource = _PressureControl
				title = #KerbalismSimplex_pressure_control
				capacity = #$../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
				running = true
			}
		@MODULE[ProcessController],*
			{	@capacity *= 1.67
			}
		MODULE
			{	name = Configure
				title = #KerbalismSimplex_pod
				slots = 2
				SETUP
					{	name = Scrubber
						desc = #KerbalismSimplex_scrubber_desc
						mass = 0.01
						cost = 250

						MODULE
							{	type = ProcessController
								id_field = resource
								id_value = _Scrubber
							}
					}
				SETUP
					{	name = Pressure Control
						desc = #KerbalismSimplex_pressure_control_desc
						mass = 0.01
						cost = 250

						MODULE
							{	type = ProcessController
								id_field = resource
								id_value = _PressureControl
							}

						RESOURCE
							{	name = Air
								amount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
								maxAmount = #$../../../MODULE[ModuleDeployableCentrifuge]/DeployedCrewCapacity$
								@amount *= 6
								@maxAmount *= 6
							}
					}
			}
	}

@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	// Kerbalism forces the habitat to be inflated if kerbals are inside
		@CrewCapacity = #$MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
		MODULE
			{	name = ProcessController
				resource = _Scrubber
				title = #KerbalismSimplex_scrubber
				capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				running = true
			}
		MODULE
			{	name = ProcessController
				resource = _PressureControl
				title = #KerbalismSimplex_pressure_control
				capacity = #$../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
				running = true
			}
		@MODULE[ProcessController],*
			{	@capacity *= 1.67
			}
		MODULE
			{	name = Configure
				title = #KerbalismSimplex_pod
				slots = 2
				SETUP
					{	name = Scrubber
						desc = #KerbalismSimplex_scrubber_desc
						mass = 0.01
						cost = 250
						MODULE
							{	type = ProcessController
								id_field = resource
								id_value = _Scrubber
							}
					}
				SETUP
					{	name = Pressure Control
						desc = #KerbalismSimplex_pressure_control_desc
						mass = 0.01
						cost = 250
						MODULE
							{	type = ProcessController
								id_field = resource
								id_value = _PressureControl
							}
						RESOURCE
							{	name = Air
								amount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
								maxAmount = #$../../../MODULE[ModuleDeployableHabitat]/DeployedCrewCapacity$
								@amount *= 6
								@maxAmount *= 6
							}
					}
			}
	}

//	=====================
//	***	Inflatable Deployment

@PART[sspx-inflatable-hab*]:NEEDS[StationPartsExpansionRedux,FeatureHabitat]:AFTER[KerbalismSimplex]
	{	MODULE
			{	name = Habitat
				inflate = Expand
				state = disabled
				animBackwards = True
			}
		!MODULE[ModuleDeployableHabitat] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-inflatable-hab-125-2]:NEEDS[FeatureHabitat]:AFTER[KerbalismSimplex]
	{	@MODULE[Habitat]	{	volume = 6.19
								surface = 15.69		}	}
	
@PART[sspx-inflatable-centrifuge-125-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{  @mass = 3.0 // kerbalism gravity ring weight 3.5 t for 65m3
		MODULE
			{	name = Habitat
				state = disabled
				volume = 36.0
				surface = 85.0
			}
		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = Expand
				rotate = SpinCenter
				deployed = False
				rotateIsTransform = True
				SpinRate = 42
				counterWeightRotate = SpinCenterCounter
				counterWeightSpinRate = -84.0
				counterWeightSpinAccelerationRate = 2.0
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-inflatable-centrifuge-125-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	@mass = 2.5 // kerbalism gravity ring weight 3.5 t for 65m3
		MODULE
			{	name = Habitat
				state = disabled
				volume = 19.0
				surface = 55.0
			}
		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = Expand
				rotate = CompactSpinCentre
				deployed = False
				rotateIsTransform = True
				counterWeightRotate = CounterWeight
				counterWeightSpinRate = -70
				counterWeightSpinAccelerationRate = 2
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-inflatable-centrifuge-25-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	@mass = 5.0 // kerbalism gravity ring weight 3.5 t for 65m3
		MODULE
			{	name = Habitat
				state = disabled
				volume = 85
				surface = 180.0
			}
		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = Expand
				rotate = B_Rotation
				rotateIsTransform = True
				SpinRate = 45
				SpinAccelerationRate = 1
				counterWeightRotate = 25mTorusCounterweight
				counterWeightSpinRate = -90
				counterWeightSpinAccelerationRate = 2
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-expandable-centrifuge-375-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE
			{	name = Habitat
				state = disabled
				inflatableUsingRigidWalls = True
				volume = 260.0
				surface = 450.0
			}

		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = CentrifugeCollapse
				rotate = B_Center
				deployed = False
				rotateIsTransform = True
				SpinRate = 35
				counterWeightRotate = Counterweight
				counterWeightSpinRate = -70
				counterWeightSpinAccelerationRate = 2
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-expandable-centrifuge-375-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE
			{	name = Habitat
				state = disabled
				inflatableUsingRigidWalls = True
				volume = 110.0
				surface = 190.0
			}
		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = Retract
				rotate = SpinCenter
				deployed = False
				rotateIsTransform = True
				SpinRate = 25
				counterWeightRotate = Counterweights
				counterWeightSpinRate = -70
				counterWeightSpinAccelerationRate = 2
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

@PART[sspx-expandable-centrifuge-5-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE
			{	name = Habitat
				state = disabled
				inflatableUsingRigidWalls = True
				volume = 380.0
				surface = 650.0
			}
		MODULE
			{	name = GravityRing
				ec_rate = 2.5
				animBackwards = True
				deploy = Retract
				rotate = B_SpinCore
				deployed = False
				rotateIsTransform = True
				SpinRate = -35
				counterWeightRotate = B_Counterweight
				counterWeightSpinRate = 70
				counterWeightSpinAccelerationRate = 2
			}
		!MODULE[ModuleDeployableCentrifuge] {} // Functionality is replaced by ModuleHabitat
	}

//	=====================
//	***	Comfort Providers

@PART[sspx-observation-25-1,sspx-cupola-125-1,sspx-cupola-375-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_panorama_desc
				bonus = panorama
			}
		@tags ^= :$: comfort:
	}

@PART[sspx-habitation-375-1,sspx-habitation-375-2,sspx-habitation-375-3]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_exercise_desc2
				bonus = exercise
			}
		MODULE:NEEDS[FeatureReliability]
			{	name = Reliability
				type = Comfort
				title = Treadmill
				repair = Engineer
				mtbf = 36288000
				extra_cost = 0.25
				extra_mass = 0.05
			}
		@tags ^= :$: comfort:
	}

@PART[sspx-inflatable-hab-25-1|sspx-inflatable-hab-25-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_exercise_treadmill_desc
				bonus = exercise
			}
		MODULE:NEEDS[FeatureReliability]
			{	name = Reliability
				type = Comfort
				title = Treadmill
				repair = Engineer
				mtbf = 36288000
				extra_cost = 0.25
				extra_mass = 0.05
			}
		@tags ^= :$: comfort:
	}

@PART[sspx-inflatable-centrifuge-25-1|sspx-inflatable-centrifuge-25-2]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_exercise_zerog_desc
				bonus = exercise
			}
		@tags ^= :$: comfort:
	}

// centrifuge has both comforts (panorama & exercise)
@PART[sspx-expandable-centrifuge-375-*,sspx-expandable-centrifuge-5-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_exercise_zerog_desc
				bonus = exercise
			}
		MODULE:NEEDS[FeatureComfort]
			{	name = Comfort
				desc = #KerbalismSimplex_bonus_panorama_desc
				bonus = panorama
			}
		@tags ^= :$: comfort:
	}

@PART[sspx-greenhouse-25-1|sspx-greenhouse-375-1,sspx-greenhouse-25-1,sspx-cupola-greenhouse-125-1,sspx-greenhouse-5-1,sspx-dome-greenhouse-5-1]:NEEDS[StationPartsExpansionRedux,FeatureComfort]:AFTER[KerbalismSimplex]
	{	MODULE
			{	name = Comfort
				bonus = plants
				desc =  #KerbalismSimplex_bonus_plants_desc
			}
		@tags ^= :$: comfort:
	}


// ============================================================================
// Greenhouses
// ============================================================================

//	125m small Greenhouse isn't going to be used for growing food, only the comfort and experiment
//	Aquaponics will provide food but at a much higher rate!  No comfort bonus from greens though, and much heavier i guess

@PART[sspx-cupola-greenhouse-125-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_no_kerbal$
	}

@PART[sspx-greenhouse-25-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_one_kerbal$
		MODULE
			{	name = Greenhouse
				crop_resource = Consumables			// name of resource produced by harvests
													// Twice as effective as kerbalism-greenhouse part, so 72 food every 72 days or so. 
				crop_size = 72						// changed to 72 day harvest
				crop_rate = 0.0000006430			
				ec_rate = 5							// 2x"kerbalism-greenhouse"
				light_tolerance = 400.0				// minimum lighting flux required for growth, in W/m^2
				pressure_tolerance = 0.1			// minimum pressure required for growth, in sea level atmospheres
				radiation_tolerance = 0.000008333	// maximum radiation allowed for growth in rad/s, considered after shielding is applied
				shutters = 25DoorsOpen				// animation to manipulate shutters
				animBackwards = True

				INPUT_RESOURCE
					{	name = OrganicSlurry
						rate = 0.0000462963		// 2x"kerbalism-greenhouse"
					}
				INPUT_RESOURCE
					{	name = BadAir
						rate = 0.0000462963		// currently replacing a whole kerbal worth of air in line with kerbalism simplex
					}
				OUTPUT_RESOURCE
					{	name = Air
						rate = 0.0000462963		// currently replacing a whole kerbal worth of air in line with kerbalism simplex
					}
			}
		RESOURCE
			{	name = OrganicSlurry
				amount = 0
				maxAmount = 72
			}
		RESOURCE
			{	name = BadAir
				amount = 0
				maxAmount = 72
			}
		RESOURCE
			{	name = Air
				amount = 0
				maxAmount = 72
			}
		!MODULE[ModuleAnimateGeneric] {}			// Greenhouse handles animation
	}

@PART[sspx-greenhouse-375-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_two_kerbal$
		MODULE											// SUPPORTS 2 kerbal
			{	name = Greenhouse
				crop_resource = Consumables				// name of resource produced by harvests
														// Twice as effective as kerbalism-greenhouse part. 
														// Both growing "rings" of this greenhouse are unfortunately in the same section. No independent growing possible. (Different watering and lighting needs for different grow stages). 
				crop_size = 144							// 4x kerbalism-greenhouse
				crop_rate = 0.0000006430				// regular growth speed
				ec_rate = 10							// 4x"kerbalism-greenhouse"
				light_tolerance = 400.0					// minimum lighting flux required for growth, in W/m^2
				pressure_tolerance = 0.1				// minimum pressure required for growth, in sea level atmospheres
				radiation_tolerance = 0.000008333		// maximum radiation allowed for growth in rad/s, considered after shielding is applied

				INPUT_RESOURCE
					{	name = OrganicSlurry
						rate = 0.0000925926				// 4x"kerbalism-greenhouse"
					}
				INPUT_RESOURCE
					{	name = BadAir
						rate = 0.0000925926				// currently replacing 2 kerbals worth of air
					}
				OUTPUT_RESOURCE
					{	name = Air
						rate = 0.0000925926		
					}
			}
		RESOURCE
			{	name = OrganicSlurry
				amount = 0
				maxAmount = 144
			}
		RESOURCE
			{	name = BadAir
				amount = 0
				maxAmount = 144
			}
		RESOURCE
			{	name = Air
				amount = 0
				maxAmount = 144
			}
	}
@PART[sspx-greenhouse-5-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_four_kerbal$
		MODULE											// potentially have two sections, harvesting twice as often, supports 3 kerbals
			{	name = Greenhouse						// SUPPORTS 4 kerbals
				crop_resource = Consumables				// name of resource produced by harvests
				crop_size = 288							// 8x kerbalism-greenhouse
				crop_rate = 0.0000006430				// regular growth speed over the 72 days
				ec_rate = 15							// 8x"kerbalism-greenhouse"
				light_tolerance = 400.0					// minimum lighting flux required for growth, in W/m^2
				pressure_tolerance = 0.1				// minimum pressure required for growth, in sea level atmospheres
				radiation_tolerance = 0.000008333		// maximum radiation allowed for growth in rad/s, considered after shielding is applied

				INPUT_RESOURCE
					{	name = OrganicSlurry
						rate = 0.000185185				// 8x"kerbalism-greenhouse"
					}
				INPUT_RESOURCE
					{	name = BadAir
						rate = 0.000185185			
					}
				OUTPUT_RESOURCE
					{	name = Air
						rate = 0.000185185			
					}
			}
		RESOURCE
			{	name = OrganicSlurry
				amount = 0
				maxAmount = 288
			}
		RESOURCE
			{	name = BadAir
				amount = 0
				maxAmount = 288
			}
		RESOURCE
			{	name = Air
				amount = 0
				maxAmount = 288
			}
	}

@PART[sspx-dome-greenhouse-5-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_four_kerbal$
		MODULE											// changed afetr initial release.  Comparable to 5m greenhouse
			{	name = Greenhouse						// SUPPORTS 4 kerbals
				crop_resource = Consumables				// name of resource produced by harvests
				crop_size = 288							// 8x kerbalism-greenhouse, 
				crop_rate = 0.0000006430				// regular growth speed over the 72 days
				ec_rate = 20							// 8x"kerbalism-greenhouse"
				light_tolerance = 400.0					// minimum lighting flux required for growth, in W/m^2
				pressure_tolerance = 0.1				// minimum pressure required for growth, in sea level atmospheres
				radiation_tolerance = 0.000008333		// maximum radiation allowed for growth in rad/s, considered after shielding is applied

				INPUT_RESOURCE
					{	name = OrganicSlurry
						rate = 0.000185185				// 8x"kerbalism-greenhouse"
					}
				INPUT_RESOURCE
					{	name = BadAir
						rate = 0.000185185			
					}
				OUTPUT_RESOURCE
					{	name = Air
						rate = 0.000185185			
					}
			}
		RESOURCE
			{	name = OrganicSlurry
				amount = 0
				maxAmount = 288
			}
		RESOURCE
			{	name = BadAir
				amount = 0
				maxAmount = 288
			}
		RESOURCE
			{	name = Air
				amount = 0
				maxAmount = 288
			}
	}

@PART[sspx-aquaculture-375-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex]:AFTER[KerbalismSimplex]		//,!AngleCanMods/SIMPLEXResources
	{	@description = #$description$ $@KERBALISM_GREENHOUSE_STRINGS/support_three_kerbal$
		MODULE											// 3x kerbalism vanilla  Supports 4 kerbals constant
			{	name = Greenhouse						// SUPPORTS 3 kerbals constant food for a year
				crop_resource = Ore						// this is a filtration system
				crop_size = 92							// Idea being this is 8x kerbalism-greenhouse, 4x 375m version
				crop_rate = 0.00000010868				// Harvest annually
				ec_rate = 15							// 6x"kerbalism-greenhouse"
				light_tolerance = 400 					// 400.0					// minimum lighting flux required for growth, in W/m^2
				pressure_tolerance = 0.1				// minimum pressure required for growth, in sea level atmospheres
				radiation_tolerance = 0.000008333		// maximum radiation allowed for growth in rad/s, considered after shielding is applied

				INPUT_RESOURCE
					{	name = Ore
						rate = 0.00001
					}
				INPUT_RESOURCE
					{	name = OrganicSlurry
						rate = 0.0001388889
					}
				INPUT_RESOURCE
					{	name = BadAir
						rate = 0.0001388889
					}
				OUTPUT_RESOURCE
					{	name = Air
						rate = 0.0001388889
					}
				OUTPUT_RESOURCE
					{	name = Consumables
						rate = 0.0001388889
					}
			}
		RESOURCE
			{	name = Ore				// could be water with CTT, otherwise Saturate
				amount = 93
				maxAmount = 93
			}

		RESOURCE
			{	name = BadAir
				amount = 216
				maxAmount = 216
			}
		RESOURCE
			{	name = OrganicSlurry
				amount = 216
				maxAmount = 216
			}
		RESOURCE
			{	name = Air
				amount = 0
				maxAmount = 216
			}
		RESOURCE
			{	name = Consumables
				amount = 0
				maxAmount = 216
			}
	}

@PART[sspx-aquaculture-375-1]:NEEDS[StationPartsExpansionRedux,ProfileSimplex,AngleCanMods/SIMPLEXResources]:AFTER[KerbalismSimplex]
	{	@MODULE[Greenhouse]
			{	@crop_resource = Saturate
				@INPUT_RESOURCE[Ore]	{	@name = Saturate	}
			}
		@RESOURCE[Ore]					{	@name = Saturate	}
	}
	